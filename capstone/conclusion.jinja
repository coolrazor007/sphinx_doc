
********************************************
Conclusion
********************************************

The pipeline will encompass spinning up a docker container to run Sphinx with the latest code from GitHub for the documentation (coincidentally this very documentation).  Then after it builds the html content the pipeline will deploy it to a staging docker container.  A Python scrypt is ran against the html page to check for a few tests to verify the document rendered and deployed properly.  After this, assuming tests are successful, the pipeline will deploy the artifact to a production html container to host the updated website.


Jenkins should now pull down the code the from GitHub and run it locally.  It will execute the Jenkinsfile which orchestrates the whole thing.  Within the Jenkinsfile are the commands to run Terraform to deploy the EC2 instance with the permissions and networking required.  In addition, Terraform will create a simple inventory file for Ansible to use.  Jenkins then kicks off Ansible to run a playbook to configure the EC2 instance and install the required software.

After all of this you can navigate to the IP of the EC2 VM on port 80 and hit Wordpress.  As this is just for initial deployment you will want to secure the EC2 instance to only be accessible via your public or some other security mechanism.

Congratulations you now have an EC2 instance in AWS running a Sphinx CI/CD Pipeline.